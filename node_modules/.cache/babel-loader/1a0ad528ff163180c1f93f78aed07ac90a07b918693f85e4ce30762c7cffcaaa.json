{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack-project\\\\Food ordering\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomNavbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track user login status\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false); // State to track admin login status\n  const navigate = useNavigate();\n\n  // Function to check if the user is logged in\n  const checkLoggedInStatus = () => {\n    const userToken = localStorage.getItem('token');\n    const adminToken = localStorage.getItem('adminToken');\n    setIsLoggedIn(!!userToken);\n    setIsAdminLoggedIn(!!adminToken);\n  };\n  useEffect(() => {\n    checkLoggedInStatus();\n  }, []);\n  const handleUserLogout = () => {\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('Name');\n    localStorage.removeItem('token');\n    setIsLoggedIn(false); // Set user login status to false upon logout\n    toast.success('Logout successful!');\n    navigate('/login');\n  };\n  const handleAdminLogout = () => {\n    localStorage.removeItem('adminToken');\n    setIsAdminLoggedIn(false); // Set admin login status to false upon logout\n    toast.success('Logout successful!');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"light\",\n    expand: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        as: Link,\n        to: \"/\",\n        children: \"Food Rage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: [isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: Link,\n              to: \"/\",\n              children: \"Food Rage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: Link,\n              to: \"/orders\",\n              children: \"My Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: Link,\n              to: \"/cart\",\n              children: \"Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              onClick: handleUserLogout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), isAdminLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: Link,\n              to: \"/admin-dashboard\",\n              children: \"Admin Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: Link,\n              to: \"/food-list\",\n              children: \"Food List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              as: Link,\n              to: \"/user-activity\",\n              children: \"User Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              onClick: handleAdminLogout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), !isLoggedIn && /*#__PURE__*/_jsxDEV(Nav.Link, {\n            as: Link,\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), !isAdminLoggedIn && /*#__PURE__*/_jsxDEV(Nav.Link, {\n            as: Link,\n            to: \"/admin/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomNavbar, \"GxOaL0W/8uEApCqsr63Ck4PVOyQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomNavbar;\nexport default CustomNavbar;\nvar _c;\n$RefreshReg$(_c, \"CustomNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","Navbar","Container","Nav","toast","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomNavbar","_s","isLoggedIn","setIsLoggedIn","isAdminLoggedIn","setIsAdminLoggedIn","navigate","checkLoggedInStatus","userToken","localStorage","getItem","adminToken","handleUserLogout","removeItem","success","handleAdminLogout","bg","expand","children","Brand","as","to","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","className","onClick","_c","$RefreshReg$"],"sources":["C:/mern stack-project/Food ordering/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CustomNavbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track user login status\r\n  const [isAdminLoggedIn, setIsAdminLoggedIn] = useState(false); // State to track admin login status\r\n  const navigate = useNavigate();\r\n\r\n  // Function to check if the user is logged in\r\n  const checkLoggedInStatus = () => {\r\n    const userToken = localStorage.getItem('token');\r\n    const adminToken = localStorage.getItem('adminToken');\r\n    setIsLoggedIn(!!userToken);\r\n    setIsAdminLoggedIn(!!adminToken);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkLoggedInStatus();\r\n  }, []);\r\n\r\n  const handleUserLogout = () => {\r\n    localStorage.removeItem('userEmail');\r\n    localStorage.removeItem('Name');\r\n    localStorage.removeItem('token');\r\n    setIsLoggedIn(false); // Set user login status to false upon logout\r\n    toast.success('Logout successful!');\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleAdminLogout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    setIsAdminLoggedIn(false); // Set admin login status to false upon logout\r\n    toast.success('Logout successful!');\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">Food Rage</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            {isLoggedIn && (\r\n              <>\r\n              <Nav.Link as={Link} to=\"/\">Food Rage</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/orders\">My Orders</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/cart\">Cart</Nav.Link>\r\n                <Nav.Link onClick={handleUserLogout}>Logout</Nav.Link>\r\n              </>\r\n            )}\r\n            {isAdminLoggedIn && (\r\n              <>\r\n                <Nav.Link as={Link} to=\"/admin-dashboard\">Admin Dashboard</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/food-list\">Food List</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/user-activity\">User Activity</Nav.Link>\r\n                <Nav.Link onClick={handleAdminLogout}>Logout</Nav.Link>\r\n              </>\r\n            )}\r\n            {!isLoggedIn && (\r\n              <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\r\n            )}\r\n            {!isAdminLoggedIn&&(\r\n              <Nav.Link as={Link} to=\"/admin/login\">Login</Nav.Link>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}