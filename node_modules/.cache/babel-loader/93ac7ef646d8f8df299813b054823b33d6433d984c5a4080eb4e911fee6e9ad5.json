{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack-project\\\\Food ordering\\\\frontend\\\\src\\\\components\\\\PaymentModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentModal = ({\n  totalPrice\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentError, setPaymentError] = useState(null);\n  const [paymentSuccess, setPaymentSuccess] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setPaymentError(error.message);\n      setPaymentSuccess(null);\n    } else {\n      setPaymentError(null);\n      setPaymentSuccess('Payment successful!');\n\n      // Send payment information to your backend\n      await handlePaymentSuccess(paymentMethod.id);\n    }\n  };\n  const handlePaymentSuccess = async paymentMethodId => {\n    try {\n      const response = await axios.post('http://localhost:5000/payment', {\n        amount: totalPrice * 100,\n        // Convert to paise (100 paise = 1 rupee)\n        payment_method: paymentMethodId\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error processing payment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), paymentError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: paymentError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), paymentSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: paymentSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: [\"Pay \\u20B9\", totalPrice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentModal, \"3tCvD0n7xR+RnIDcuSZKeoZlbF8=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentModal;\nexport default PaymentModal;\nvar _c;\n$RefreshReg$(_c, \"PaymentModal\");","map":{"version":3,"names":["React","useState","useStripe","useElements","CardElement","axios","jsxDEV","_jsxDEV","PaymentModal","totalPrice","_s","stripe","elements","paymentError","setPaymentError","paymentSuccess","setPaymentSuccess","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","message","handlePaymentSuccess","id","paymentMethodId","response","post","amount","payment_method","console","log","data","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/mern stack-project/Food ordering/frontend/src/components/PaymentModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n\r\nconst PaymentModal = ({ totalPrice }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [paymentError, setPaymentError] = useState(null);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n\r\n    if (error) {\r\n      setPaymentError(error.message);\r\n      setPaymentSuccess(null);\r\n    } else {\r\n      setPaymentError(null);\r\n      setPaymentSuccess('Payment successful!');\r\n\r\n      // Send payment information to your backend\r\n      await handlePaymentSuccess(paymentMethod.id);\r\n    }\r\n  };\r\n\r\n  const handlePaymentSuccess = async (paymentMethodId) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/payment', {\r\n        amount: totalPrice * 100, // Convert to paise (100 paise = 1 rupee)\r\n        payment_method: paymentMethodId,\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error processing payment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      {paymentError && <div>{paymentError}</div>}\r\n      {paymentSuccess && <div>{paymentSuccess}</div>}\r\n      <button type=\"submit\" disabled={!stripe}>\r\n        Pay â‚¹{totalPrice}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMgB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACR,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;IACF;IAEA,MAAM;MAAEQ,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMV,MAAM,CAACW,mBAAmB,CAAC;MAChEC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEZ,QAAQ,CAACa,UAAU,CAACrB,WAAW;IACvC,CAAC,CAAC;IAEF,IAAIgB,KAAK,EAAE;MACTN,eAAe,CAACM,KAAK,CAACM,OAAO,CAAC;MAC9BV,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACLF,eAAe,CAAC,IAAI,CAAC;MACrBE,iBAAiB,CAAC,qBAAqB,CAAC;;MAExC;MACA,MAAMW,oBAAoB,CAACN,aAAa,CAACO,EAAE,CAAC;IAC9C;EACF,CAAC;EAED,MAAMD,oBAAoB,GAAG,MAAOE,eAAe,IAAK;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,+BAA+B,EAAE;QACjEC,MAAM,EAAEvB,UAAU,GAAG,GAAG;QAAE;QAC1BwB,cAAc,EAAEJ;MAClB,CAAC,CAAC;MACFK,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdc,OAAO,CAACd,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEb,OAAA;IAAM8B,QAAQ,EAAEpB,YAAa;IAAAqB,QAAA,gBAC3B/B,OAAA,CAACH,WAAW;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACd7B,YAAY,iBAAIN,OAAA;MAAA+B,QAAA,EAAMzB;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzC3B,cAAc,iBAAIR,OAAA;MAAA+B,QAAA,EAAMvB;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CnC,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAACoB,QAAQ,EAAE,CAAChC,MAAO;MAAA2B,QAAA,GAAC,YAClC,EAAC7B,UAAU;IAAA;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAChC,EAAA,CApDIF,YAAY;EAAA,QACDN,SAAS,EACPC,WAAW;AAAA;AAAAyC,EAAA,GAFxBpC,YAAY;AAsDlB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}