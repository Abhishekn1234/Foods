{"ast":null,"code":"// AdminLoginForm.js\nimport React,{useState}from'react';import axios from'axios';import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AdminLoginForm=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('http://localhost:5000/admin/login',{email,password});if(response.data&&response.data.token){const token=response.data.token;localStorage.setItem('adminToken',token);navigate('/admin-dashboard');// Trigger callback to update login state in parent component\n}else{throw new Error('Invalid response format from the server');}}catch(error){var _error$response,_error$response$data;console.error('Login failed:',((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.msg)||error.message);setError('Invalid email or password');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Email\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Password\",required:true})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{children:error})]});};export default AdminLoginForm;","map":{"version":3,"names":["React","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminLoginForm","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","post","data","token","localStorage","setItem","Error","_error$response","_error$response$data","console","msg","message","children","onSubmit","type","value","onChange","target","placeholder","required"],"sources":["C:/mern stack-project/Food ordering/frontend/src/components/admin/AdminLogin.js"],"sourcesContent":["// AdminLoginForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst AdminLoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate=useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/admin/login', { email, password });\r\n      if (response.data && response.data.token) {\r\n        const token = response.data.token;\r\n        localStorage.setItem('adminToken', token);\r\n        \r\n        navigate('/admin-dashboard');\r\n         // Trigger callback to update login state in parent component\r\n      } else {\r\n        throw new Error('Invalid response format from the server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error.response?.data?.msg || error.message);\r\n      setError('Invalid email or password');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Admin Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginForm;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAAQC,WAAW,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAC7C,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAc,QAAQ,CAACZ,WAAW,CAAC,CAAC,CAC5B,KAAM,CAAAa,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,IAAI,CAAC,mCAAmC,CAAE,CAAEX,KAAK,CAAEE,QAAS,CAAC,CAAC,CAC3F,GAAIQ,QAAQ,CAACE,IAAI,EAAIF,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACxC,KAAM,CAAAA,KAAK,CAAGH,QAAQ,CAACE,IAAI,CAACC,KAAK,CACjCC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEF,KAAK,CAAC,CAEzCP,QAAQ,CAAC,kBAAkB,CAAC,CAC3B;AACH,CAAC,IAAM,CACL,KAAM,IAAI,CAAAU,KAAK,CAAC,yCAAyC,CAAC,CAC5D,CACF,CAAE,MAAOZ,KAAK,CAAE,KAAAa,eAAA,CAAAC,oBAAA,CACdC,OAAO,CAACf,KAAK,CAAC,eAAe,CAAE,EAAAa,eAAA,CAAAb,KAAK,CAACM,QAAQ,UAAAO,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBL,IAAI,UAAAM,oBAAA,iBAApBA,oBAAA,CAAsBE,GAAG,GAAIhB,KAAK,CAACiB,OAAO,CAAC,CAC1EhB,QAAQ,CAAC,2BAA2B,CAAC,CACvC,CACF,CAAC,CACD,mBACEP,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBxB,KAAA,SAAMyB,QAAQ,CAAEhB,YAAa,CAAAe,QAAA,eAC3B1B,IAAA,QAAA0B,QAAA,cACE1B,IAAA,UAAO4B,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEzB,KAAM,CAAC0B,QAAQ,CAAGlB,CAAC,EAAKP,QAAQ,CAACO,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,OAAO,CAACC,QAAQ,MAAE,CAAC,CACzG,CAAC,cACNjC,IAAA,QAAA0B,QAAA,cACE1B,IAAA,UAAO4B,IAAI,CAAC,UAAU,CAACC,KAAK,CAAEvB,QAAS,CAACwB,QAAQ,CAAGlB,CAAC,EAAKL,WAAW,CAACK,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,UAAU,CAACC,QAAQ,MAAE,CAAC,CACrH,CAAC,cACNjC,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,CACNlB,KAAK,eAAIR,IAAA,MAAA0B,QAAA,CAAIlB,KAAK,CAAI,CAAC,EACrB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}