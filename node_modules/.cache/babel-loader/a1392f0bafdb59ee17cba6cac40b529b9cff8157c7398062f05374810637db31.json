{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack-project\\\\Food ordering\\\\frontend\\\\src\\\\components\\\\AdminRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRegister = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/admin/register', {\n        email,\n        password,\n        name\n      });\n      console.log(response.data); // You can handle success response here\n    } catch (error) {\n      console.error('Registration failed:', error.response.data.msg);\n      setError('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminRegister, \"XFrd384eVUyCVCFeQzi5KyCzJsQ=\");\n_c = AdminRegister;\nexport default AdminRegister;\nvar _c;\n$RefreshReg$(_c, \"AdminRegister\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AdminRegister","_s","email","setEmail","password","setPassword","name","setName","error","setError","handleSubmit","e","preventDefault","response","post","console","log","data","msg","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/mern stack-project/Food ordering/frontend/src/components/AdminRegister.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdminRegister = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/admin/register', { email, password, name });\r\n      console.log(response.data); // You can handle success response here\r\n    } catch (error) {\r\n      console.error('Registration failed:', error.response.data.msg);\r\n      setError('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Registration</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Name\" required />\r\n        </div>\r\n        <div>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRegister;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}