{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack-project\\\\Food ordering\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Row, Col, Button, DropdownButton, Dropdown } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [foods, setFoods] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const foodResponse = await axios.get('http://localhost:5000/foods');\n        setFoods(foodResponse.data);\n        const categoryResponse = await axios.get('http://localhost:5000/categories');\n        setCategories(categoryResponse.data.map(category => ({\n          ...category,\n          count: foods.filter(food => food.category === category.category).length\n        })));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, [foods]); // Added foods to dependencies to ensure the categories count updates when foods change\n\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  const handleAddToCart = (food, quantity) => {\n    const cartItem = {\n      name: food.name,\n      quantity,\n      price: food.price * quantity,\n      options: food.options\n    };\n    setCart([...cart, cartItem]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-light p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleCategoryChange(category.category),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [category.category, \" (\", category.count, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 3,\n        className: \"g-4\",\n        children: foods.filter(food => food.category === category.category).map(food => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary text-light\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: food.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: food.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this), \" \", food.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 71\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this), \" $\", food.price, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 60\n                }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                  id: `dropdown-${food._id}`,\n                  title: \"Quantity\",\n                  children: [...Array(10).keys()].map((quantity, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    onClick: () => handleAddToCart(food, quantity + 1),\n                    children: quantity + 1\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => handleAddToCart(food, 1),\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, food._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, category._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"pY2ZWffv9j+pLC+W/XI44qKLORc=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Row","Col","Button","DropdownButton","Dropdown","jsxDEV","_jsxDEV","Home","_s","foods","setFoods","categories","setCategories","selectedCategory","setSelectedCategory","cart","setCart","fetchData","foodResponse","get","data","categoryResponse","map","category","count","filter","food","length","error","console","handleCategoryChange","handleAddToCart","quantity","cartItem","name","price","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xs","md","Img","variant","src","image","Body","Title","Text","description","id","_id","title","Array","keys","index","Item","_c","$RefreshReg$"],"sources":["C:/mern stack-project/Food ordering/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, Row, Col, Button, DropdownButton, Dropdown } from 'react-bootstrap';\r\n\r\nexport default function Home() {\r\n  const [foods, setFoods] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [cart, setCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const foodResponse = await axios.get('http://localhost:5000/foods');\r\n        setFoods(foodResponse.data);\r\n\r\n        const categoryResponse = await axios.get('http://localhost:5000/categories');\r\n        setCategories(categoryResponse.data.map(category => ({ ...category, count: foods.filter(food => food.category === category.category).length })));\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [foods]); // Added foods to dependencies to ensure the categories count updates when foods change\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n  const handleAddToCart = (food, quantity) => {\r\n    const cartItem = { name: food.name, quantity, price: food.price * quantity, options: food.options };\r\n    setCart([...cart, cartItem]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-dark text-light p-4\">\r\n      <h1>Categories</h1>\r\n      {categories.map(category => (\r\n        <div key={category._id} onClick={() => handleCategoryChange(category.category)}>\r\n          <h2>{category.category} ({category.count})</h2>\r\n          <Row xs={1} md={3} className=\"g-4\">\r\n            {foods.filter(food => food.category === category.category).map(food => (\r\n              <Col key={food._id}>\r\n                <Card className=\"bg-secondary text-light\">\r\n                  <Card.Img variant=\"top\" src={food.image} />\r\n                  <Card.Body>\r\n                    <Card.Title>{food.name}</Card.Title>\r\n                    <Card.Text>\r\n                      <strong>Description:</strong> {food.description}<br />\r\n                      <strong>Price:</strong> ${food.price}<br />\r\n                      <DropdownButton id={`dropdown-${food._id}`} title=\"Quantity\">\r\n                        {[...Array(10).keys()].map((quantity, index) => (\r\n                          <Dropdown.Item key={index} onClick={() => handleAddToCart(food, quantity + 1)}>{quantity + 1}</Dropdown.Item>\r\n                        ))}\r\n                      </DropdownButton>\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={() => handleAddToCart(food, 1)}>Add to Cart</Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}