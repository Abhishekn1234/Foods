{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern stack-project\\\\Food ordering\\\\frontend\\\\src\\\\components\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CButton, CCardBody, CCard, CCardHeader, CCol, CRow, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CLabel, CInput, CSelect } from \"@coreui/react\";\nimport { Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [foods, setFoods] = useState([]);\n  const [userOrders, setUserOrders] = useState([]);\n  const [showAddFoodModal, setShowAddFoodModal] = useState(false);\n  const [newFood, setNewFood] = useState({\n    name: \"\",\n    price: 0,\n    image: \"\",\n    options: [],\n    category: \"\"\n  });\n  useEffect(() => {\n    fetchFoods();\n    fetchUserOrders();\n  }, []);\n  const fetchFoods = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/foods\");\n      setFoods(response.data);\n    } catch (error) {\n      console.error(\"Error fetching foods:\", error);\n    }\n  };\n  const fetchUserOrders = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/orderss\");\n      setUserOrders(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user orders:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewFood(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleAddFood = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/foods/add\", newFood);\n      console.log(response);\n      setShowAddFoodModal(false);\n      setNewFood({\n        name: \"\",\n        price: 0,\n        image: \"\",\n        options: [],\n        category: \"\"\n      });\n      fetchFoods();\n    } catch (error) {\n      console.error(\"Error adding food:\", error);\n    }\n  };\n\n  // Calculate user activity based on orders data\n  const calculateUserActivityData = () => {\n    const loginCount = localStorage.getItem(\"userEmail\") ? 1 : 0;\n    const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\n    const cartCount = cartItems.length;\n    return {\n      labels: [\"Login\", \"Cart\"],\n      datasets: [{\n        data: [loginCount, cartCount],\n        backgroundColor: [\"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#36A2EB\", \"#FFCE56\"]\n      }]\n    };\n  };\n\n  // Calculate user activity data whenever userOrders changes\n  const userActivityData = calculateUserActivityData();\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: [/*#__PURE__*/_jsxDEV(CCol, {\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Admin Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CButton, {\n            onClick: () => setShowAddFoodModal(true),\n            children: \"Add Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: foods.map(food => /*#__PURE__*/_jsxDEV(CCol, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                  children: food.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Price: $\", food.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: food.image,\n                    alt: food.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, food._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CCard, {\n            children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n              children: \"User Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n              children: /*#__PURE__*/_jsxDEV(Pie, {\n                data: userActivityData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CModal, {\n      show: showAddFoodModal,\n      onClose: () => setShowAddFoodModal(false),\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n          children: \"Add Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CLabel, {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CInput, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: newFood.name,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CLabel, {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CInput, {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            value: newFood.price,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CLabel, {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CInput, {\n            type: \"text\",\n            id: \"image\",\n            name: \"image\",\n            value: newFood.image,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CLabel, {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CSelect, {\n            custom: true,\n            id: \"category\",\n            name: \"category\",\n            value: newFood.category,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"breakfast\",\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lunch\",\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dinner\",\n              children: \"Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(CButton, {\n          color: \"primary\",\n          onClick: handleAddFood,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: () => setShowAddFoodModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"wJH6uSypkXA4tGcbm2IBIrMh0o4=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","CButton","CCardBody","CCard","CCardHeader","CCol","CRow","CModal","CModalBody","CModalFooter","CModalHeader","CModalTitle","CLabel","CInput","CSelect","Pie","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","foods","setFoods","userOrders","setUserOrders","showAddFoodModal","setShowAddFoodModal","newFood","setNewFood","name","price","image","options","category","fetchFoods","fetchUserOrders","response","get","data","error","console","handleInputChange","e","value","target","prevState","handleAddFood","post","log","calculateUserActivityData","loginCount","localStorage","getItem","cartItems","JSON","parse","cartCount","length","labels","datasets","backgroundColor","hoverBackgroundColor","userActivityData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","food","md","src","alt","_id","show","onClose","closeButton","htmlFor","type","id","onChange","custom","color","_c","$RefreshReg$"],"sources":["C:/mern stack-project/Food ordering/frontend/src/components/admin/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCardBody,\r\n  CCard,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [foods, setFoods] = useState([]);\r\n  const [userOrders, setUserOrders] = useState([]);\r\n  const [showAddFoodModal, setShowAddFoodModal] = useState(false);\r\n  const [newFood, setNewFood] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    image: \"\",\r\n    options: [],\r\n    category: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchFoods();\r\n    fetchUserOrders();\r\n  }, []);\r\n\r\n  const fetchFoods = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/foods\");\r\n      setFoods(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching foods:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchUserOrders = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/orderss\");\r\n      setUserOrders(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user orders:\", error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewFood((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleAddFood = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/foods/add\",\r\n        newFood\r\n      );\r\n      console.log(response);\r\n      setShowAddFoodModal(false);\r\n      setNewFood({\r\n        name: \"\",\r\n        price: 0,\r\n        image: \"\",\r\n        options: [],\r\n        category: \"\",\r\n      });\r\n      fetchFoods();\r\n    } catch (error) {\r\n      console.error(\"Error adding food:\", error);\r\n    }\r\n  };\r\n\r\n  // Calculate user activity based on orders data\r\n  const calculateUserActivityData = () => {\r\n    const loginCount = localStorage.getItem(\"userEmail\") ? 1 : 0;\r\n    const cartItems = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n    const cartCount = cartItems.length;\r\n\r\n    return {\r\n      labels: [\"Login\", \"Cart\"],\r\n      datasets: [\r\n        {\r\n          data: [loginCount, cartCount],\r\n          backgroundColor: [\"#36A2EB\", \"#FFCE56\"],\r\n          hoverBackgroundColor: [\"#36A2EB\", \"#FFCE56\"],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  // Calculate user activity data whenever userOrders changes\r\n  const userActivityData = calculateUserActivityData();\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <h3>Admin Dashboard</h3>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CButton onClick={() => setShowAddFoodModal(true)}>\r\n              Add Food\r\n            </CButton>\r\n            {/* Display food cards */}\r\n            <CRow>\r\n              {foods.map((food) => (\r\n                <CCol key={food._id} md=\"4\">\r\n                  <CCard>\r\n                    <CCardHeader>{food.name}</CCardHeader>\r\n                    <CCardBody>\r\n                      <p>Price: ${food.price}</p>\r\n                      <img src={food.image} alt={food.name} />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              ))}\r\n            </CRow>\r\n            {/* Display user activity pie chart */}\r\n            <CCard>\r\n              <CCardHeader>User Activity</CCardHeader>\r\n              <CCardBody>\r\n                <Pie data={userActivityData} />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n\r\n      {/* Modal for adding food */}\r\n      <CModal\r\n        show={showAddFoodModal}\r\n        onClose={() => setShowAddFoodModal(false)}\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Add Food</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <div>\r\n            <CLabel htmlFor=\"name\">Name</CLabel>\r\n            <CInput\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={newFood.name}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CLabel htmlFor=\"price\">Price</CLabel>\r\n            <CInput\r\n              type=\"number\"\r\n              id=\"price\"\r\n              name=\"price\"\r\n              value={newFood.price}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CLabel htmlFor=\"image\">Image</CLabel>\r\n            <CInput\r\n              type=\"text\"\r\n              id=\"image\"\r\n              name=\"image\"\r\n              value={newFood.image}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CLabel htmlFor=\"category\">Category</CLabel>\r\n            <CSelect\r\n              custom\r\n              id=\"category\"\r\n              name=\"category\"\r\n              value={newFood.category}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select category</option>\r\n              <option value=\"breakfast\">Breakfast</option>\r\n              <option value=\"lunch\">Lunch</option>\r\n              <option value=\"dinner\">Dinner</option>\r\n            </CSelect>\r\n          </div>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={handleAddFood}>\r\n            Add\r\n          </CButton>{\" \"}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={() => setShowAddFoodModal(false)}\r\n          >\r\n            Cancel\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}